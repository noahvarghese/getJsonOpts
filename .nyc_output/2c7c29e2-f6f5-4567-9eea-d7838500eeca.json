{"/home/user/build/ts-getopts/src/util/logs.ts":{"path":"/home/user/build/ts-getopts/src/util/logs.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"6":{"start":{"line":11,"column":0},"end":{"line":20,"column":34}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":46}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":48}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":48}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":46}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":48}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":44}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":44}},"15":{"start":{"line":21,"column":21},"end":{"line":26,"column":2}},"16":{"start":{"line":21,"column":28},"end":{"line":26,"column":1}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":15}},"18":{"start":{"line":27,"column":22},"end":{"line":29,"column":1}},"19":{"start":{"line":28,"column":4},"end":{"line":28,"column":55}},"20":{"start":{"line":30,"column":21},"end":{"line":63,"column":1}},"21":{"start":{"line":66,"column":22},"end":{"line":66,"column":33}},"22":{"start":{"line":67,"column":18},"end":{"line":67,"column":88}},"23":{"start":{"line":68,"column":4},"end":{"line":68,"column":119}},"24":{"start":{"line":70,"column":0},"end":{"line":70,"column":34}},"25":{"start":{"line":73,"column":8},"end":{"line":73,"column":58}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":43}},"27":{"start":{"line":79,"column":8},"end":{"line":79,"column":59}},"28":{"start":{"line":82,"column":8},"end":{"line":82,"column":42}},"29":{"start":{"line":85,"column":8},"end":{"line":85,"column":59}},"30":{"start":{"line":88,"column":8},"end":{"line":88,"column":41}},"31":{"start":{"line":91,"column":8},"end":{"line":91,"column":41}},"32":{"start":{"line":94,"column":8},"end":{"line":94,"column":45}},"33":{"start":{"line":97,"column":0},"end":{"line":97,"column":23}},"34":{"start":{"line":98,"column":0},"end":{"line":98,"column":98}},"35":{"start":{"line":99,"column":0},"end":{"line":107,"column":2}},"36":{"start":{"line":101,"column":4},"end":{"line":106,"column":5}},"37":{"start":{"line":102,"column":8},"end":{"line":102,"column":26}},"38":{"start":{"line":105,"column":8},"end":{"line":105,"column":106}},"39":{"start":{"line":108,"column":0},"end":{"line":111,"column":2}},"40":{"start":{"line":110,"column":4},"end":{"line":110,"column":89}},"41":{"start":{"line":112,"column":0},"end":{"line":123,"column":2}},"42":{"start":{"line":113,"column":4},"end":{"line":122,"column":5}},"43":{"start":{"line":114,"column":8},"end":{"line":121,"column":9}},"44":{"start":{"line":115,"column":48},"end":{"line":115,"column":73}},"45":{"start":{"line":116,"column":12},"end":{"line":116,"column":45}},"46":{"start":{"line":119,"column":32},"end":{"line":119,"column":33}},"47":{"start":{"line":120,"column":12},"end":{"line":120,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":22},"end":{"line":20,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":21},"end":{"line":21,"column":22}},"loc":{"start":{"line":21,"column":28},"end":{"line":26,"column":1}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":21},"end":{"line":23,"column":22}},"loc":{"start":{"line":23,"column":33},"end":{"line":25,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":22},"end":{"line":27,"column":23}},"loc":{"start":{"line":27,"column":40},"end":{"line":29,"column":1}},"line":27},"5":{"name":"outputStack","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":20}},"loc":{"start":{"line":64,"column":28},"end":{"line":69,"column":1}},"line":64},"6":{"name":"(anonymous_6)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":25},"end":{"line":74,"column":5}},"line":72},"7":{"name":"(anonymous_7)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":26},"end":{"line":77,"column":5}},"line":75},"8":{"name":"(anonymous_8)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":26},"end":{"line":80,"column":5}},"line":78},"9":{"name":"(anonymous_9)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":28},"end":{"line":83,"column":5}},"line":81},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":26},"end":{"line":86,"column":5}},"line":84},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":24},"end":{"line":89,"column":5}},"line":87},"12":{"name":"(anonymous_12)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":24},"end":{"line":92,"column":5}},"line":90},"13":{"name":"(anonymous_13)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":27},"end":{"line":95,"column":5}},"line":93},"14":{"name":"(anonymous_14)","decl":{"start":{"line":99,"column":21},"end":{"line":99,"column":22}},"loc":{"start":{"line":99,"column":38},"end":{"line":107,"column":1}},"line":99},"15":{"name":"(anonymous_15)","decl":{"start":{"line":108,"column":18},"end":{"line":108,"column":19}},"loc":{"start":{"line":108,"column":32},"end":{"line":111,"column":1}},"line":108},"16":{"name":"(anonymous_16)","decl":{"start":{"line":112,"column":11},"end":{"line":112,"column":12}},"loc":{"start":{"line":112,"column":34},"end":{"line":123,"column":1}},"line":112}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":20,"column":3},"end":{"line":20,"column":32}},"type":"binary-expr","locations":[{"start":{"line":20,"column":3},"end":{"line":20,"column":12}},{"start":{"line":20,"column":17},"end":{"line":20,"column":31}}],"line":20},"4":{"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":88}},"type":"cond-expr","locations":[{"start":{"line":67,"column":55},"end":{"line":67,"column":61}},{"start":{"line":67,"column":64},"end":{"line":67,"column":88}}],"line":67},"5":{"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":52}},"type":"binary-expr","locations":[{"start":{"line":67,"column":18},"end":{"line":67,"column":32}},{"start":{"line":67,"column":36},"end":{"line":67,"column":52}}],"line":67},"6":{"loc":{"start":{"line":68,"column":11},"end":{"line":68,"column":118}},"type":"cond-expr","locations":[{"start":{"line":68,"column":111},"end":{"line":68,"column":113}},{"start":{"line":68,"column":116},"end":{"line":68,"column":118}}],"line":68},"7":{"loc":{"start":{"line":68,"column":11},"end":{"line":68,"column":108}},"type":"binary-expr","locations":[{"start":{"line":68,"column":11},"end":{"line":68,"column":91}},{"start":{"line":68,"column":95},"end":{"line":68,"column":108}}],"line":68},"8":{"loc":{"start":{"line":68,"column":17},"end":{"line":68,"column":81}},"type":"cond-expr","locations":[{"start":{"line":68,"column":54},"end":{"line":68,"column":60}},{"start":{"line":68,"column":63},"end":{"line":68,"column":81}}],"line":68},"9":{"loc":{"start":{"line":68,"column":17},"end":{"line":68,"column":51}},"type":"binary-expr","locations":[{"start":{"line":68,"column":17},"end":{"line":68,"column":31}},{"start":{"line":68,"column":35},"end":{"line":68,"column":51}}],"line":68},"10":{"loc":{"start":{"line":98,"column":16},"end":{"line":98,"column":97}},"type":"cond-expr","locations":[{"start":{"line":98,"column":84},"end":{"line":98,"column":86}},{"start":{"line":98,"column":89},"end":{"line":98,"column":97}}],"line":98},"11":{"loc":{"start":{"line":98,"column":16},"end":{"line":98,"column":81}},"type":"binary-expr","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":64}},{"start":{"line":98,"column":68},"end":{"line":98,"column":81}}],"line":98},"12":{"loc":{"start":{"line":101,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":106,"column":5}},{"start":{"line":101,"column":4},"end":{"line":106,"column":5}}],"line":101},"13":{"loc":{"start":{"line":105,"column":24},"end":{"line":105,"column":105}},"type":"cond-expr","locations":[{"start":{"line":105,"column":92},"end":{"line":105,"column":94}},{"start":{"line":105,"column":97},"end":{"line":105,"column":105}}],"line":105},"14":{"loc":{"start":{"line":105,"column":24},"end":{"line":105,"column":89}},"type":"binary-expr","locations":[{"start":{"line":105,"column":24},"end":{"line":105,"column":72}},{"start":{"line":105,"column":76},"end":{"line":105,"column":89}}],"line":105},"15":{"loc":{"start":{"line":110,"column":11},"end":{"line":110,"column":88}},"type":"cond-expr","locations":[{"start":{"line":110,"column":69},"end":{"line":110,"column":71}},{"start":{"line":110,"column":74},"end":{"line":110,"column":88}}],"line":110},"16":{"loc":{"start":{"line":110,"column":11},"end":{"line":110,"column":66}},"type":"binary-expr","locations":[{"start":{"line":110,"column":11},"end":{"line":110,"column":49}},{"start":{"line":110,"column":53},"end":{"line":110,"column":66}}],"line":110},"17":{"loc":{"start":{"line":113,"column":4},"end":{"line":122,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":122,"column":5}},{"start":{"line":113,"column":4},"end":{"line":122,"column":5}}],"line":113}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":8,"17":0,"18":1,"19":8,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":0,"47":0},"f":{"0":1,"1":1,"2":8,"3":0,"4":8,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[1,0],"11":[1,1],"12":[0,0],"13":[0,0],"14":[0,0],"15":[1,0],"16":[1,1],"17":[1,0]},"inputSourceMap":{"version":3,"file":"/home/user/build/ts-getopts/src/util/logs.ts","sources":["/home/user/build/ts-getopts/src/util/logs.ts"],"names":[],"mappings":"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","sourcesContent":["import dotenv from \"dotenv\";\ndotenv.config();\n\nenum LogLevels {\n    TEST = 0,\n    EVENT = 1,\n    ERROR = 2,\n    WARN = 3,\n    DEBUG = 4,\n    LOG = 5,\n    METRICS = 6,\n    SQL = 7,\n}\n\ninterface LogData {\n    prefix: string;\n    consoleFunction: (prefix: string, ...args: unknown[]) => void;\n}\n\nconst emptyLogData = (): LogData => ({\n    prefix: \"\",\n    consoleFunction: function (): void {\n        return;\n    },\n});\n\nconst createLogData = <T extends Partial<LogData>>(\n    intialValues: T\n): LogData & T => {\n    return Object.assign(emptyLogData(), intialValues);\n};\n\nconst LogDataTypes = {\n    [LogLevels.TEST]: createLogData({\n        prefix: \"[ TEST ]: \",\n        consoleFunction: console.log,\n    }),\n    [LogLevels.EVENT]: createLogData({\n        prefix: \"[ EVENT ]: \",\n        consoleFunction: console.log,\n    }),\n    [LogLevels.ERROR]: createLogData({\n        prefix: \"[ ERROR ]: \",\n        consoleFunction: console.error,\n    }),\n    [LogLevels.WARN]: createLogData({\n        prefix: \"[ WARNING ]: \",\n        consoleFunction: console.warn,\n    }),\n    [LogLevels.DEBUG]: createLogData({\n        prefix: \"[ DEBUG ]: \",\n        consoleFunction: console.log,\n    }),\n    [LogLevels.LOG]: createLogData({\n        prefix: \"[ LOG ]: \",\n        consoleFunction: console.error,\n    }),\n    [LogLevels.SQL]: createLogData({\n        prefix: \"[ SQL ]: \",\n        consoleFunction: console.warn,\n    }),\n    [LogLevels.METRICS]: createLogData({\n        prefix: \"[ METRICS ]: \",\n        consoleFunction: console.warn,\n    }),\n};\n\nexport function outputStack(layer: number): string {\n    const { stack } = new Error();\n    const frame = stack?.split(\"\\n\")[layer];\n    // const line = frame?.split(\":\").reverse()[1];\n    // const func = frame?.split(\" \")[5];\n    // console.log(frame);\n    // return `${func}:${line}`;\n    return frame?.substring(4) ?? \"\";\n}\n\nexport default class Logs {\n    static logLevel: LogLevels = Number(process.env[\"LOG_LEVEL\"]) ?? Infinity;\n\n    public static configureLogs = (disableLogs: boolean): void => {\n        if (disableLogs) {\n            Logs.logLevel = 0;\n        } else {\n            Logs.logLevel = Number(process.env[\"LOG_LEVEL\"]) ?? Infinity;\n        }\n    };\n\n    private static getLogData = (logLevel: LogLevels): LogData => {\n        return LogDataTypes[logLevel] ?? emptyLogData();\n    };\n\n    private static add = (logLevel: LogLevels, ...args: unknown[]): void => {\n        if (logLevel <= Logs.logLevel) {\n            try {\n                const { prefix, consoleFunction }: LogData =\n                    Logs.getLogData(logLevel);\n                consoleFunction(prefix, ...args);\n            } catch (e) {\n                const { message } = e as Error;\n                console.error(message);\n            }\n        }\n    };\n\n    static Test(...args: unknown[]): void {\n        Logs.add(LogLevels.TEST, ...args, outputStack(3));\n    }\n\n    static Event(...args: unknown[]): void {\n        Logs.add(LogLevels.EVENT, ...args);\n    }\n\n    static Error(...args: unknown[]): void {\n        Logs.add(LogLevels.ERROR, ...args, outputStack(3));\n    }\n\n    static Warning(...args: unknown[]): void {\n        Logs.add(LogLevels.WARN, ...args);\n    }\n\n    static Debug(...args: unknown[]): void {\n        Logs.add(LogLevels.DEBUG, ...args, outputStack(3));\n    }\n\n    static Log(...args: unknown[]): void {\n        Logs.add(LogLevels.LOG, ...args);\n    }\n\n    static SQL(...args: unknown[]): void {\n        Logs.add(LogLevels.SQL, ...args);\n    }\n\n    static Metric(...args: unknown[]): void {\n        Logs.add(LogLevels.METRICS, ...args);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"27c4c89854b53e1b190d07b0f8cb1b879aaa7daa","contentHash":"d01712f1c8b82beef73e413ddd1285a17e002350eb7fd5ee1546dbc106c063c2"}}